{"version":3,"sources":["Components/player-card.jsx","Models/card.model.js","Models/player.model.js","Components/add-player-card.jsx","Cards/money.cards.js","Cards/military.cards.js","Cards/wonders.cards.js","Cards/civic.cards.js","Cards/science.cards.js","Helpers/array.helper.js","Helpers/card.helper.js","Cards/commerce.cards.js","Cards/misc.cards.js","Cards/guild.cards.js","Services/board.service.js","Components/shared/quantity-selector.jsx","Components/card-builder.jsx","Hooks/map.hook.js","Components/player-scoreboard.jsx","Components/shared/drag-drop.jsx","Services/score.service.js","Views/seven-wonders.jsx","Hooks/modal.hook.js","Components/shared/comps.jsx","Views/image-test.jsx","routes.js","Components/navbar.jsx","App.js","index.js"],"names":["ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","PlayerCard","React","useState","expanded","setExpanded","CardHeader","title","name","action","menu","CardActions","disableSpacing","Typography","paragraph","points","onClick","Collapse","in","timeout","unmountOnExit","CardContent","sx","p","children","Card","this","constructor","Error","Player","AddPlayerCard","Fab","color","position","bottom","right","Silver","Gold","BattleWins","BattleLosses","Wonder","wonder","val","getWonder","board","side","current","get","sideA","option","wonders","Rhodes","Giza","Alexandria","Ephesus","Babylon","Olympia","Halicarnassus","cards","map","item","quantity","TwoPoint","ThreePoint","FourPoint","FivePoint","SixPoint","SevenPoint","EightPoint","Tablet","Cog","Compass","sum","arr","reduce","acc","nextItem","index","length","prevItem","numberOfMiscCards","player","type","count","forEach","card","numberOfBrownCards","numberOfGreyCards","numberOfRedCards","numberOfBattleLosses","filter","numberOfCards","Haven","players","Lighthouse","ChamberOfCommerce","Arena","YellowOther","errorMessage","Brown","Grey","Red","WorkersGuild","CraftsmensGuild","TradersGuild","PhilosophersGuild","SpiesGuild","StrategistsGuild","ShipownersGuild","MagistratesGuild","BuildersGuild","getBoard","boardMap","Map","set","getMilitaryMap","getMoneyMap","getCivicMap","getScienceMap","getCommerceMap","getGuildsMap","getMiscMap","boardService","QuantitySelector","max","Number","MAX_VALUE","ButtonGroup","variant","value","onChange","className","readOnly","Transition","forwardRef","ref","Slide","direction","CardBuilder","initialSet","state","setState","key","prev","clone","unset","delete","clear","useMap","update","boardItemKey","cardIndex","WonderPicker","options","Object","entries","label","isSearchable","FormGroup","row","FormControlLabel","control","Checkbox","checked","target","Dialog","fullScreen","open","show","onClose","handleClose","TransitionComponent","AppBar","Toolbar","edge","ml","flex","component","Button","autoFocus","handleSave","keys","boardIndex","Accordion","panel","event","isExpanded","AccordionSummary","expandIcon","AccordionDetails","List","ListItem","secondaryAction","ListItemText","primary","PlayerScoreboard","Chip","size","mx","DragDrop","onDragEnd","droppableId","provided","droppableProps","innerRef","placeholder","Drag","draggableId","snapshot","draggableProps","dragHandleProps","style","isDragging","draggableStyle","userSelect","calculateScientificStructures","Math","pow","min","sumOfCardActionTimesQuantity","scoreService","boardItem","floor","assign","calculateScore","SevenWonders","initialPlayers","useList","push","updateAt","removeAt","setModal","openModal","closeModal","useModal","modal","useDeepCompareEffect","slice","getPoints","values","DropdownMenu","anchorEl","setAnchorEl","menuOpen","Boolean","currentTarget","Menu","MenuItem","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","playerName","prompt","Container","div","attrs","left","top","width","height","score","round","ImageTest","useRef","setModel","a","model","tf","console","log","err","useEffect","then","loadModel","src","alt","Routes","path","exact","main","AppNavbar","Navbar","collapseOnSelect","bg","Brand","Toggle","Nav","route","Link","as","to","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f654277.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardActions, CardContent, CardHeader, Collapse, IconButton, Typography } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { styled } from '@mui/material/styles';\n\nconst ExpandMore = styled((props) => {\n    const {expand, ...other} = props;\n    return <IconButton {...other} />;\n})(({theme, expand}) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n    }),\n}));\n\n\nexport default function PlayerCard(props) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n    return (\n        <Card>\n            <CardHeader title={props.name} action={props.menu}/>\n            <CardActions disableSpacing>\n                <Typography paragraph>Total: {props.points}</Typography>\n                <ExpandMore expand={expanded} onClick={handleExpandClick}>\n                    <ExpandMoreIcon/>\n                </ExpandMore>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent sx={{p: 0}}>\n                    {props.children}\n                </CardContent>\n            </Collapse>\n        </Card>\n    )\n}\n\n","export class Card {\n    constructor() {\n        if (this.constructor === Card) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n    }\n\n    name: string;\n    action() {\n        throw new Error(\"Method must be implemented.\")\n    };\n}\n\n","import BoardItem from \"./board-item.model\";\n\nexport default class Player {\n    name: string;\n    board: Map<string, BoardItem>;\n\n    constructor(name: string) {\n        this.name = name;\n    }\n}\n\n\n\n\n\n","import React from \"react\";\nimport { Fab } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nexport default function AddPlayerCard(props) {\n    const fabSx = {\n        position: 'absolute',\n        bottom: 16,\n        right: 16,\n    };\n\n    return (\n        <Fab color=\"primary\" onClick={props.onClick} sx={fabSx}>\n            <AddIcon/>\n        </Fab>\n    )\n}\n","import { Card } from \"../Models/card.model\";\n\nexport class Silver implements Card {\n    name = 'Silver';\n\n    action() {\n        return 1;\n    };\n}\n\nexport class Gold implements Card {\n    name = 'Gold';\n\n    action() {\n        return 3;\n    };\n}\n\nexport default function getMoneyMap(board) {\n    board.set('money', {\n        points: 0,\n        cards: [\n            {\n                item: new Silver(),\n                quantity: 0,\n            },\n            {\n                item: new Gold(),\n                quantity: 0,\n            },\n        ]\n    },);\n}\n","import { Card } from \"../Models/card.model\";\n\nexport class BattleWins implements Card {\n    name = 'Battle Wins';\n\n    action() {\n        return 1;\n    };\n}\n\nexport class BattleLosses implements Card {\n    name = 'Battle Losses';\n\n    action() {\n        return -1;\n    };\n}\n\n\nexport default function getMilitaryMap(board) {\n    board.set('military', {\n        points: 0,\n        cards: [\n            {\n                item: new BattleWins(),\n                quantity: 0,\n            },\n            {\n                item: new BattleLosses(),\n                quantity: 0,\n            },\n        ]\n    },);\n}\n","import { Card } from \"../Models/card.model\";\n\nexport class Wonder implements Card {\n    constructor(wonder: wonders, val: number) {\n        this.name = `${wonder} Phase One`\n        this.action = () => val;\n    }\n}\n\nexport function getWonder(board, wonder, side) {\n    let points;\n    const current = board?.get('wonders');\n    const sideA = side ?? current?.sideA ?? true\n    const option = wonder ?? current?.option ?? wonders.Rhodes;\n\n    if (sideA) {\n        points = option === wonders.Giza\n            ? [3, 5, 7]\n            : [3, 0, 7]\n    } else {\n        switch (option) {\n            case wonders.Rhodes:\n                points = [3, 4];\n                break;\n            case wonders.Alexandria:\n                points = [0, 0, 7];\n                break;\n            case wonders.Ephesus:\n                points = [2, 3, 5];\n                break;\n            case wonders.Babylon:\n                points = [3, 0, 0];\n                break;\n            case wonders.Olympia:\n                points = [0, 5, 0];\n                break;\n            case wonders.Halicarnassus:\n                points = [2, 1, 0];\n                break;\n            case wonders.Giza:\n                points = [3, 5, 5, 7];\n                break;\n            default:\n                points = [0, 0, 0]\n                break;\n        }\n    }\n\n    return {\n        points: 0,\n        option: option,\n        sideA: sideA,\n        cards: points.map(val => ({item: new Wonder(option, val), quantity: 0}))\n    };\n}\n\nexport default function getWonderMap(board) {\n    board.set('wonders', getWonder());\n}\n\nexport const wonders = {\n    Rhodes: 'Rhodes',\n    Alexandria: 'Alexandria',\n    Ephesus: 'Ephesus',\n    Babylon: 'Babylon',\n    Olympia: 'Olympia',\n    Halicarnassus: 'Halicarnassus',\n    Giza: 'Giza',\n}\n\nexport const wondersSelect = () => {\n    return Object.entries(wonders).map(wonder => ({value: wonder[0], label: wonder[1]}));\n}\n","import { Card } from \"../Models/card.model\";\n\nexport class TwoPoint implements Card {\n    name = 'Two Victory Points';\n\n    action() {\n        return 2;\n    }\n}\n\nexport class ThreePoint implements Card {\n    name = 'Three Victory Points';\n\n    action() {\n        return 3;\n    }\n}\n\nexport class FourPoint implements Card {\n    name = 'Four Victory Points';\n\n    action() {\n        return 4;\n    }\n}\n\nexport class FivePoint implements Card {\n    name = 'Five Victory Points';\n\n    action() {\n        return 5;\n    }\n}\n\nexport class SixPoint implements Card {\n    name = 'Six Victory Points';\n\n    action() {\n        return 6;\n    }\n}\n\nexport class SevenPoint implements Card {\n    name = 'Seven Victory Points';\n\n    action() {\n        return 7;\n    }\n}\n\nexport class EightPoint implements Card {\n    name = 'Eight Victory Points';\n\n    action() {\n        return 8;\n    }\n}\n\n\nexport default function getCivicMap(board) {\n    board.set('civic', {\n        points: 0,\n        cards: [\n            {\n                item: new TwoPoint(),\n                quantity: 0,\n            },\n            {\n                item: new ThreePoint(),\n                quantity: 0,\n            },\n            {\n                item: new FourPoint(),\n                quantity: 0,\n            },\n            {\n                item: new FivePoint(),\n                quantity: 0,\n            },\n            {\n                item: new SixPoint(),\n                quantity: 0,\n            },\n            {\n                item: new SevenPoint(),\n                quantity: 0,\n            },\n            {\n                item: new EightPoint(),\n                quantity: 0,\n            },\n        ]\n    })\n}\n\n\n","import { Card } from \"../Models/card.model\";\n\nexport class Tablet implements Card {\n    name = 'Tablet';\n\n    action() {\n        return 1;\n    };\n}\n\nexport class Cog implements Card {\n    name = 'Cog';\n\n    action() {\n        return 1;\n    };\n}\n\nexport class Compass implements Card {\n    name = 'Compass';\n\n    action() {\n        return 1;\n    };\n}\n\nexport default function getScienceMap(board) {\n    board.set('science', {\n        points: 0,\n        cards: [\n            {\n                item: new Tablet(),\n                quantity: 0,\n            },\n            {\n                item: new Cog(),\n                quantity: 0,\n            },\n            {\n                item: new Compass(),\n                quantity: 0,\n            }\n        ]\n    },);\n}\n","export const sum = (arr: []) => arr.reduce((acc, val) => acc + val, 0);\n\nexport const nextItem = (arr: [], index: number) => {\n    return arr.length === index + 1\n        ? arr[0]\n        : arr[index + 1]\n}\n\nexport const prevItem = (arr: [], index: number) => {\n    return index === 0\n        ? arr[arr.length - 1]\n        : arr[index - 1]\n}\n\nexport const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n","import Player from \"../Models/player.model\";\nimport { sum } from \"./array.helper\";\n\nconst numberOfMiscCards = (player, type) => {\n    let count = 0;\n    player.board?.get('misc').cards.forEach(card => {\n        if (card.item.name === type) {\n            count = card.quantity\n        }\n    })\n    return count;\n}\nexport const numberOfBrownCards = (player: Player) => {\n    return numberOfMiscCards(player, 'Raw Materials');\n}\n\nexport const numberOfGreyCards = (player: Player) => {\n    return numberOfMiscCards(player, 'Manufactured Goods');\n}\n\nexport const numberOfRedCards = (player: Player) => {\n    return numberOfMiscCards(player, 'Military Structures');\n}\n\nexport const numberOfBattleLosses = (player: Player) => {\n    return player.board?.get('military').cards.filter(card => card.item.name === 'Battle Losses' && card.quantity > 0)?.length ?? 0\n}\n\nexport const numberOfCards = (player: Player, type: string) => {\n    return sum(player.board?.get(type).cards.map(card => card.quantity) ?? [0]);\n}\n\n","import { Card } from \"../Models/card.model\";\nimport { numberOfBrownCards, numberOfCards, numberOfGreyCards } from \"../Helpers/card.helper\";\n\n\nexport class Haven implements Card {\n    name = 'Haven';\n\n    action = (props) => {\n        return numberOfBrownCards(props.players[props.index]);\n    }\n}\n\nexport class Lighthouse implements Card {\n    name = 'Lighthouse';\n\n    action = (props) => {\n        return numberOfCards(props.players[props.index], 'commerce');\n    }\n}\n\nexport class ChamberOfCommerce implements Card {\n    name = 'Chamber Of Commerce';\n\n    action = (props) => {\n        return (numberOfGreyCards(props.players[props.index]) * 2);\n    }\n}\n\nexport class Arena implements Card {\n    name = 'Arena';\n\n    action = (props) => {\n        return numberOfCards(props.players[props.index], 'wonders');\n    }\n}\n\nexport class YellowOther implements Card {\n    name = 'Other';\n\n    action = () => {\n        return 0;\n    }\n}\n\nexport default function getCommerceMap(board) {\n    board.set('commerce', {\n        points: 0,\n        cards: [\n            {\n                item: new Haven(),\n                quantity: 0,\n            },\n            {\n                item: new Lighthouse(),\n                quantity: 0,\n            },\n            {\n                item: new ChamberOfCommerce(),\n                quantity: 0,\n            },\n            {\n                item: new Arena(),\n                quantity: 0,\n            },\n            {\n                item: new YellowOther(),\n                quantity: 0,\n            },\n        ]\n    },);\n}\n","import { Card } from \"../Models/card.model\";\n\nconst errorMessage = 'misc cards do not play an action';\n\nexport class Brown implements Card {\n    name = 'Raw Materials'\n\n    action = () => {\n        throw new Error(errorMessage);\n    }\n}\n\nexport class Grey implements Card {\n    name = 'Manufactured Goods'\n\n    action = () => {\n        throw new Error(errorMessage);\n    }\n}\n\nexport class Red implements Card {\n    name = 'Military Structures'\n\n    action = () => {\n        throw new Error(errorMessage);\n    }\n}\n\nexport default function getMiscMap(board) {\n    board.set('misc', {\n        points: 0,\n        cards: [\n            {\n                item: new Brown(),\n                quantity: 0,\n            },\n            {\n                item: new Grey(),\n                quantity: 0,\n            },\n            {\n                item: new Red(),\n                quantity: 0,\n            },\n        ]\n    },);\n}\n","import { Card } from \"../Models/card.model\";\nimport { nextItem, prevItem } from \"../Helpers/array.helper\";\nimport {\n    numberOfBattleLosses,\n    numberOfBrownCards,\n    numberOfCards,\n    numberOfGreyCards,\n    numberOfRedCards\n} from \"../Helpers/card.helper\";\n\nexport class WorkersGuild extends Card {\n    name = 'Workers Guild'\n\n    action = (props) => {\n        return numberOfBrownCards(prevItem(props.players, props.index))\n            + numberOfBrownCards(nextItem(props.players, props.index));\n    }\n}\n\nexport class CraftsmensGuild extends Card {\n    name = 'Craftsmens Guild'\n\n    action = (props) => {\n        return (numberOfGreyCards(prevItem(props.players, props.index)) * 2)\n            + (numberOfGreyCards(nextItem(props.players, props.index)) * 2);\n    }\n}\n\nexport class TradersGuild extends Card {\n    name = 'Traders Guild'\n\n    action = (props) => {\n        return numberOfCards(prevItem(props.players, props.index), 'commerce')\n            + numberOfCards(nextItem(props.players, props.index), 'commerce');\n    }\n}\n\nexport class PhilosophersGuild extends Card {\n    name = 'Philosophers Guild'\n\n    action = (props) => {\n        return numberOfCards(prevItem(props.players, props.index), 'science')\n            + numberOfCards(nextItem(props.players, props.index), 'science');\n    }\n}\n\nexport class SpiesGuild extends Card {\n    name = 'Spies Guild'\n\n    action = (props) => {\n        return numberOfRedCards(prevItem(props.players, props.index))\n            + numberOfRedCards(nextItem(props.players, props.index));\n    }\n}\n\nexport class StrategistsGuild extends Card {\n    name = 'Strategists Guild'\n\n    action = (props) => {\n        return numberOfBattleLosses(prevItem(props.players, props.index))\n            + numberOfBattleLosses(nextItem(props.players, props.index));\n    }\n}\n\nexport class ShipownersGuild extends Card {\n    name = 'Shipowners Guild'\n\n    action = (props) => {\n        return numberOfBrownCards(props.players[props.index])\n            + numberOfGreyCards(props.players[props.index])\n            + numberOfCards(props.players[props.index], 'guild');\n    }\n}\n\nexport class MagistratesGuild extends Card {\n    name = 'Magistrates Guild'\n\n    action = (props) => {\n        return numberOfCards(prevItem(props.players, props.index), 'civic')\n            + numberOfCards(nextItem(props.players, props.index), 'civic');\n    }\n}\n\nexport class BuildersGuild extends Card {\n    name = 'Builders Guild'\n\n    action = (props) => {\n        return numberOfCards(prevItem(props.players, props.index), 'wonders')\n            + numberOfCards(props.players[props.index], 'wonders')\n            + numberOfCards(nextItem(props.players, props.index), 'wonders');\n    }\n}\n\nexport default function getGuildsMap(board) {\n    board.set('guild', {\n        points: 0,\n        cards: [\n            {\n                item: new WorkersGuild(),\n                quantity: 0,\n            },\n            {\n                item: new CraftsmensGuild(),\n                quantity: 0,\n            },\n            {\n                item: new TradersGuild(),\n                quantity: 0,\n            },\n            {\n                item: new PhilosophersGuild(),\n                quantity: 0,\n            },\n            {\n                item: new SpiesGuild(),\n                quantity: 0,\n            },\n            {\n                item: new StrategistsGuild(),\n                quantity: 0,\n            },\n            {\n                item: new ShipownersGuild(),\n                quantity: 0,\n            },\n            {\n                item: new MagistratesGuild(),\n                quantity: 0,\n            },\n            {\n                item: new BuildersGuild(),\n                quantity: 0,\n            },\n        ]\n    });\n}\n","import getMoneyMap from \"../Cards/money.cards\";\nimport getMilitaryMap from \"../Cards/military.cards\";\nimport getWonderMap from \"../Cards/wonders.cards\";\nimport getCivicMap from \"../Cards/civic.cards\";\nimport getScienceMap from \"../Cards/science.cards\";\nimport getCommerceMap from \"../Cards/commerce.cards\";\nimport getMiscMap from \"../Cards/misc.cards\";\nimport getGuildsMap from \"../Cards/guild.cards\";\n\nconst getBoard = () => {\n    const boardMap = new Map();\n    getWonderMap(boardMap)\n    getMilitaryMap(boardMap)\n    getMoneyMap(boardMap)\n    getCivicMap(boardMap)\n    getScienceMap(boardMap)\n    getCommerceMap(boardMap)\n    getGuildsMap(boardMap)\n    getMiscMap(boardMap)\n\n    return boardMap;\n}\n\nexport const boardService = {\n    get: () => getBoard()\n}\n","import { ButtonGroup, IconButton } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nexport default function QuantitySelector(props) {\n    const min = 0;\n    const max = Number.MAX_VALUE;\n\n\n    const increase = () => {\n        if (props.value < max) {\n            props.onChange(props.value + 1);\n        }\n    }\n\n    const decrease = () => {\n        if (props.value > min) {\n            props.onChange(props.value - 1);\n        }\n    }\n\n    return (\n        <ButtonGroup variant=\"contained\">\n            <IconButton onClick={decrease}>\n                <RemoveIcon/>\n            </IconButton>\n            <input className=\"quantity-input__screen\" type=\"text\" value={props.value} readOnly/>\n            <IconButton onClick={increase}>\n                <AddIcon/>\n            </IconButton>\n        </ButtonGroup>\n\n    );\n}\n","import React, { forwardRef, useState } from \"react\";\nimport { boardService } from \"../Services/board.service\";\nimport Select from 'react-select'\nimport { getWonder, wondersSelect } from \"../Cards/wonders.cards\";\nimport useMap from \"../Hooks/map.hook\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    AppBar,\n    Button,\n    Checkbox,\n    Dialog,\n    FormControlLabel,\n    FormGroup,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    Slide,\n    Toolbar,\n    Typography\n} from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport QuantitySelector from \"./shared/quantity-selector\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function CardBuilder(props) {\n    const [board, {set}] = useMap(props.board ?? boardService.get())\n    const [expanded, setExpanded] = useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const update = (value, boardItemKey, cardIndex) => {\n        const map = board.get(boardItemKey);\n        map.cards[cardIndex].quantity = value;\n        set(boardItemKey, map)\n    }\n\n    const WonderPicker = () => {\n        const sideOptions = [\n            {value: true, label: 'Side A'},\n            {value: false, label: 'Side B'},\n        ]\n        return (\n            <>\n                <Select options={wondersSelect()}\n                        value={{label: board.get('wonders').option}}\n                        isSearchable={false}\n                        onChange={option => set('wonders', getWonder(board, option.value))}>\n                </Select>\n                <Select options={sideOptions}\n                        isSearchable={false}\n                        value={{label: `Side ${board.get('wonders').sideA ? 'A' : 'B'}`}}\n                        onChange={option => set('wonders', getWonder(board, null, option.value))}>\n                </Select>\n                <FormGroup row={true}>\n                    {board?.get('wonders').cards.map((card, cardIndex) => (\n                        <FormControlLabel key={cardIndex}\n                                          label={`Phase ${cardIndex + 1}`}\n                                          control={\n                                              <Checkbox checked={card.quantity === 1}\n                                                        onChange={val => update(+val.target.checked, 'wonders', cardIndex)}/>\n                                          }\n                        />\n\n                    ))}\n                </FormGroup>\n            </>\n        )\n    }\n\n    return (\n        <Dialog fullScreen open={props.show} onClose={props.handleClose} TransitionComponent={Transition}>\n            <AppBar sx={{position: 'relative'}}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={props.handleClose}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <Typography sx={{ml: 2, flex: 1}} variant=\"h6\" component=\"div\">Scoreboard Builder</Typography>\n                    <Button autoFocus color=\"inherit\" onClick={() => props.handleSave(board)}>save</Button>\n                </Toolbar>\n            </AppBar>\n\n            {\n                [...board.keys()].map((boardItemKey, boardIndex) => (\n                    <Accordion key={boardIndex} expanded={expanded === boardIndex} onChange={handleChange(boardIndex)}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon/>} key={boardIndex}>\n                            {boardItemKey}\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <List>\n                                {(boardItemKey === 'wonders')\n                                    ? <WonderPicker/>\n                                    : board?.get(boardItemKey).cards.map((card, cardIndex) => (\n                                        <ListItem key={cardIndex}\n                                                  secondaryAction={\n                                                      <QuantitySelector value={card.quantity}\n                                                                        onChange={quantity => update(quantity, boardItemKey, cardIndex)}/>\n                                                  }>\n                                            <ListItemText primary={card.item.name}/>\n                                        </ListItem>\n                                    ))}\n                            </List>\n                        </AccordionDetails>\n                    </Accordion>\n                ))}\n        </Dialog>\n    )\n}\n","import { useState } from \"react\";\n\nexport default function useMap(initialSet) {\n    const [state, setState] = useState(new Map(initialSet))\n    const set = (key, value) => {\n        setState((prev) => {\n            const clone = new Map(prev)\n            clone.set(key, value)\n            return clone\n        })\n    }\n    const unset = (key) => {\n        setState((prev) => {\n            const clone = new Map(prev)\n            clone.delete(key)\n            return clone\n        })\n    }\n    const clear = () => {\n        setState((prev) => {\n            const clone = new Map(prev)\n            clone.clear()\n            return clone\n        })\n    }\n    return [state, {set, unset, clear}]\n}\n","import React, { useState } from \"react\";\nimport { Accordion, AccordionDetails, AccordionSummary, Chip, List, ListItem, ListItemText } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nexport default function PlayerScoreboard(props) {\n    const [expanded, setExpanded] = useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    return (\n        <>\n            {[...props.board.keys()].map((boardItemKey, boardIndex) => (\n                    <Accordion key={boardIndex} expanded={expanded === boardIndex} onChange={handleChange(boardIndex)}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                            <Chip label={props.board.get(boardItemKey).points}\n                                  color=\"success\"\n                                  size=\"small\"\n                                  sx={{mx: 1}}/>\n                            {boardItemKey}\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <List>\n                                {props.board.get(boardItemKey).cards.map((card, cardIndex) => (\n                                    <ListItem key={cardIndex} secondaryAction={card.quantity}>\n                                        <ListItemText primary={card.item.name}/>\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </AccordionDetails>\n                    </Accordion>\n                )\n            )}\n        </>\n    )\n}\n","import { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport React from \"react\";\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: \"none\",\n    ...draggableStyle\n});\n\n\nconst DragDrop = (props) => (<DragDropContext onDragEnd={props.onDragEnd}>\n    <Droppable droppableId=\"droppable\">\n        {provided => (\n            <div {...provided.droppableProps}\n                 ref={provided.innerRef}>\n                {props.children}\n                {provided.placeholder}\n            </div>)}\n    </Droppable>\n</DragDropContext>)\n\nconst Drag = (props) => (<Draggable key={props.name} draggableId={props.name} index={props.index}>\n    {(provided, snapshot) => (\n        <div ref={provided.innerRef}\n             {...provided.draggableProps}\n             {...provided.dragHandleProps}\n             className=\"mb-3\"\n             style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}>\n            {props.children}\n        </div>\n    )}\n</Draggable>);\n\nDragDrop.Drag = Drag;\n\nexport default DragDrop;\n\n","import Player from \"../Models/player.model\";\nimport { CardWithQuantity } from \"../Models/card-with-quantity.model\";\nimport { sum } from \"../Helpers/array.helper\";\n\nconst calculateScore = (props: Player[]) => {\n    const players = props;\n\n    players.forEach((player, index) => {\n        player.board && player.board.forEach((boardItem, key) => {\n            let points = 0;\n            switch (key) {\n                case 'military':\n                case 'civic':\n                case 'wonders':\n                    points = sumOfCardActionTimesQuantity(boardItem.cards);\n                    break;\n                case 'money':\n                    points = Math.floor(sumOfCardActionTimesQuantity(boardItem.cards) / 3);\n                    break;\n                case 'science':\n                    points = calculateScientificStructures(boardItem.cards);\n                    break;\n                case 'commerce':\n                case 'guild':\n                    points = sumOfCardActionTimesQuantity(boardItem.cards, {players: players, index: index});\n                    break;\n                default:\n            }\n\n            player.board.set(key, Object.assign(boardItem, {points: points}))\n        })\n    });\n\n    return players;\n}\n\n\nconst calculateScientificStructures = (cards: CardWithQuantity[]) => {\n    const identicalSymbolPoints = sum(cards.map(card => Math.pow(card.quantity, 2)));\n    const bonusCardPoints = Math.min(...cards.map(card => card.quantity)) * 7;\n\n    return identicalSymbolPoints + bonusCardPoints;\n}\n\n\nconst sumOfCardActionTimesQuantity = (cards: CardWithQuantity[], props = null) =>\n    sum(cards.map(card => card.quantity === 0 ? 0 : card.item.action(props) * card.quantity));\n\nexport const scoreService = {\n    calculate: (players: Player[]) => calculateScore(players)\n}\n","import PlayerCard from \"../Components/player-card\";\nimport React, { useState } from \"react\";\nimport Player from \"../Models/player.model\";\nimport AddPlayerCard from \"../Components/add-player-card\";\nimport CardBuilder from \"../Components/card-builder\";\nimport PlayerScoreboard from \"../Components/player-scoreboard\";\nimport DragDrop from \"../Components/shared/drag-drop\";\nimport { reorder } from \"../Helpers/array.helper\";\nimport { useDeepCompareEffect, useList } from \"react-use\";\nimport { scoreService } from \"../Services/score.service\";\nimport useModal from \"../Hooks/modal.hook\";\nimport { Container, IconButton, Menu, MenuItem, Typography } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nexport default function SevenWonders() {\n    const initialPlayers = [new Player('steven'), new Player('charlotte')];\n\n    const [players, {set, push, updateAt, removeAt}] = useList(initialPlayers);\n    const [modal, {openModal, closeModal}] = useModal(false)\n\n    useDeepCompareEffect(() => {\n        set(scoreService.calculate(players.slice()));\n    }, [players, modal]);\n\n\n    const addPlayer = () => {\n        const playerName = prompt(\"Please enter player name\");\n        if (playerName) {\n            push(new Player(playerName));\n        }\n    }\n\n    const saveModal = (board) => {\n        const index = modal.index;\n        const player = players[index]\n        player.board = board;\n        updateAt(index, player)\n        closeModal();\n    }\n\n    const getPoints = (player) => {\n        return player.board ? ([...player.board.values()].reduce((acc, val) => acc + val.points, 0)) : 0;\n    }\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        set(reorder(players.slice(), result.source.index, result.destination.index));\n    }\n\n    function DropdownMenu(props) {\n        const [anchorEl, setAnchorEl] = useState(null);\n        const menuOpen = Boolean(anchorEl);\n\n        return (\n            <>\n                <IconButton onClick={(event) => setAnchorEl(event.currentTarget)}>\n                    <MoreVertIcon/>\n                </IconButton>\n                <Menu anchorEl={anchorEl}\n                      open={menuOpen}\n                      onClose={() => setAnchorEl(null)}>\n                    <MenuItem onClick={() => openModal({index: props.index})}>Add/Edit Scoreboard</MenuItem>\n                    <MenuItem onClick={() => removeAt(props.index)}>Delete Player</MenuItem>\n                </Menu>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Typography variant=\"h5\" component=\"h1\" className=\"m-3\">7-Wonders</Typography>\n            <Container>\n                <DragDrop onDragEnd={onDragEnd}>\n                    {players.map((player, index) => (\n                        <DragDrop.Drag key={index} name={player.name} index={index}>\n                            <PlayerCard key={index} name={player.name}\n                                        points={getPoints(player)}\n                                        menu={<DropdownMenu index={index}/>}>\n                                {player.board && <PlayerScoreboard board={player.board}/>}\n                            </PlayerCard>\n                        </DragDrop.Drag>\n                    ))}\n                </DragDrop>\n                <AddPlayerCard onClick={addPlayer}/>\n            </Container>\n            {modal.open && <CardBuilder show={modal.open}\n                                        handleClose={closeModal}\n                                        handleSave={saveModal}\n                                        board={players[modal.index]?.board}/>\n            }\n        </>\n    )\n}\n","import { useState } from \"react\";\n\nexport default function useModal(open) {\n    const [state, setModal] = useState({open: open})\n\n    const openModal = (props) => {\n        setModal({open: true, ...props})\n    }\n\n    const closeModal = () => {\n        setModal({open: false})\n    }\n\n    return [state, {openModal, closeModal}]\n}\n","import styled from \"styled-components\";\n\n// See their implementations below\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const Box = styled.div.attrs(props => ({\n    style: {\n        left: `${props.left}px`,\n        top: `${props.top}px`,\n        width: `${props.width}px`,\n        height: `${props.height}px`\n    }\n}))`\n  border: 2px solid ${({color}) => color || \"red\"};\n  position: absolute;\n  border-radius: 4px;\n\n  &::before,\n  &::after {\n    display: block;\n    position: absolute;\n    top: 0;\n    color: white;\n    background: ${({color}) => color || \"red\"};\n    padding: 3px 6px;\n    font-size: 12px;\n    font-family: monospace;\n  }\n\n  &::before {\n    content: \"${({label}) => label}\";\n    left: 0;\n    border-radius: 0 0 4px;\n  }\n\n  &::after {\n    content: \"${({score}) => Math.round(score * 100)}%\";\n    right: 0;\n    border-radius: 0 0 0 4px;\n  }\n`;\n\nexport const Circle = styled.div`\n  content: \"\";\n  background: ${({color}) => color || \"red\"};\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  transform: translate(-4px, -4px);\n  border-radius: 8px;\n  left: ${({left}) => left}px;\n  top: ${({top}) => top}px;\n  width: ${({width}) => width}px;\n  height: ${({height}) => height}px;\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport useObjects from \"../Hooks/useObjects\";\nimport { Box, Container } from \"../Components/shared/comps\";\nimport * as tf from '@tensorflow/tfjs'\n\nexport default function ImageTest() {\n     const ref = useRef();\n    // const objects = useObjects(ref, {modelUrl: 'object/model.json'});\n    const webcamRef = useRef(null);\n    const [videoWidth, setVideoWidth] = useState(960);\n    const [videoHeight, setVideoHeight] = useState(640);\n    const [model, setModel] = useState();\n\n    \n    async function loadModel() {\n        try {\n            const model = tf.loadLayersModel('object/model.json')\n            setModel(model);\n            console.log(\"setloadedModel\");\n        } catch (err) {\n            console.log(err);\n            console.log(\"failed load model\");\n        }\n    }\n\n    useEffect(() => {\n        tf.ready().then(() => {\n            loadModel();\n        });\n    }, []);\n\n    async function predictionFunction() {\n        const predictions = await model.detect(document.getElementById(\"img\"));\n        // setVideoHeight(webcamRef.current.video.videoHeight);\n        // setVideoWidth(webcamRef.current.video.videoWidth);\n        var cnvs = document.getElementById(\"myCanvas\");\n\n        // cnvs.style.position = \"absolute\";\n\n        var ctx = cnvs.getContext(\"2d\");\n        ctx.clearRect(\n            0,\n            0,\n            webcamRef.current.video.videoWidth,\n            webcamRef.current.video.videoHeight\n        );\n\n        if (predictions.length > 0) {\n            // setPredictionData(predictions);\n            console.log(predictions);\n            for (let n = 0; n < predictions.length; n++) {\n                // Check scores\n                console.log(n);\n                if (predictions[n].score > 0.8) {\n                    let bboxLeft = predictions[n].bbox[0];\n                    let bboxTop = predictions[n].bbox[1];\n                    let bboxWidth = predictions[n].bbox[2];\n                    let bboxHeight = predictions[n].bbox[3] - bboxTop;\n\n                    console.log(\"bboxLeft: \" + bboxLeft);\n                    console.log(\"bboxTop: \" + bboxTop);\n\n                    console.log(\"bboxWidth: \" + bboxWidth);\n\n                    console.log(\"bboxHeight: \" + bboxHeight);\n\n                    ctx.beginPath();\n                    ctx.font = \"28px Arial\";\n                    ctx.fillStyle = \"red\";\n\n                    ctx.fillText(\n                        predictions[n].class +\n                        \": \" +\n                        Math.round(parseFloat(predictions[n].score) * 100) +\n                        \"%\",\n                        bboxLeft,\n                        bboxTop\n                    );\n\n                    ctx.rect(bboxLeft, bboxTop, bboxWidth, bboxHeight);\n                    ctx.strokeStyle = \"#FF0000\";\n\n                    ctx.lineWidth = 3;\n                    ctx.stroke();\n\n                    console.log(\"detected\");\n                }\n            }\n        }\n\n        setTimeout(() => predictionFunction(), 500);\n    }\n\n    const videoConstraints = {\n        height: 1080,\n        width: 1920,\n        maxWidth: \"100vw\",\n        facingMode: \"environment\",\n    };\n\n    return (\n        <Container>\n            {/*<img  src='cog.jpg' alt='cog'/>*/}\n            <img ref={ref} src='cog.jpg' alt='cog'/>\n            {/*{objects ? objects.map(({left, top, width, height, label, score}) => (*/}\n            {/*    <Box left={left}*/}\n            {/*         top={top}*/}\n            {/*         width={width}*/}\n            {/*         height={height}*/}\n            {/*         label={label}*/}\n            {/*         color={score > 0.6 ? \"blue\" : \"red\"}*/}\n            {/*         score={score}*/}\n            {/*    />*/}\n            {/*)) : 'Loading...'}*/}\n        </Container>\n    );\n}\n\n","import SevenWonders from \"./Views/seven-wonders\";\nimport ImageTest from \"./Views/image-test\";\n\nconst Routes = [\n    {\n        path: \"/\",\n        exact: true,\n        name: 'Home!',\n        main: () => <h2>Home</h2>\n    },\n    {\n        path: \"/sevenwonders\",\n        name: '7 Wonders',\n        main: () => <SevenWonders/>\n    },\n    {\n        path: \"/test\",\n        name: 'Test!',\n        main: () => <ImageTest/>\n    }\n];\n\nexport default Routes;\n","import { Container, Nav, Navbar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Routes from \"../routes\";\n\nexport default function AppNavbar() {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand>Game Scores</Navbar.Brand>\n                <Navbar.Toggle/>\n                <Navbar.Collapse>\n                    <Nav className=\"me-auto\">\n                        {\n                            Routes.map((route, index) => {\n                                return (\n                                    <Nav.Link as={Link} key={index} to={route.path} href={route.path}>\n                                        {route.name}\n                                    </Nav.Link>\n                                )\n                            },)\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport AppNavbar from \"./Components/navbar\";\nimport Routes from \"./routes\";\n\nexport default function App() {\n    return (\n        <HashRouter>\n            <AppNavbar/>\n            <Switch>\n                {\n                    Routes.map((route, index) => (\n                        <Route\n                            key={index}\n                            path={route.path}\n                            exact={route.exact}\n                            children={<route.main/>}\n                        />\n                    ))\n                }\n            </Switch>\n        </HashRouter>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}